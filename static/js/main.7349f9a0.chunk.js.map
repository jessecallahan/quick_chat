{"version":3,"sources":["components/ChatForm.js","components/Chat.js","components/ChatList.js","components/FriendList.js","components/Logout.js","components/ErrorPage.js","components/AnnonSignIn.js","components/LinkCopy.js","components/RoomTitle.js","components/ChatClear.js","components/ChatControl.js","assets/title.jpg","assets/grape.jpg","assets/orange.jpg","assets/lime.jpg","components/Header.js","components/Signin.js","components/Signup.js","components/Landing.js","components/App.js","reducers/index.js","firebase.js","index.js"],"names":["NewTicketForm","props","firestore","useFirestore","event","a","preventDefault","user","firebase","auth","currentUser","collection","main_id","add","name","displayName","content","target","value","user_id","uid","createdAt","FieldValue","serverTimestamp","Fragment","onSubmit","rows","cols","placeholder","type","Chat","ChatList","useFirestoreConnect","pathname","orderBy","path","chats","useSelector","state","ordered","isLoaded","map","chat","id","FriendList","useState","people","setPeople","useEffect","doc","onSnapshot","exists","data","names","console","log","className","friend","index","Logout","onClick","docRef","get","then","newFriendsList","filter","update","catch","error","friendsListSignOut","signOut","message","setCurrentUser","ErrorPage","AnnonSignIn","hasError","setError","signInAnonymously","result","updateProfile","errorMessage","arrayUnion","LinkCopy","copyToClipBoard","copyMe","navigator","clipboard","writeText","RoomTitle","chatRoomName","ChatClear","deleteCollection","querySnapshot","docs","forEach","snapshot","ref","delete","window","confirm","ChatControl","useLocation","topLeftCurrentState","linkRender","friendShow","chatListShow","ChatForm","mainUser","Header","grapePath","known_pathGrape","orangePath","known_pathOrange","limePath","known_pathLime","home","to","src","title","alt","grape","orange","lime","setHome","Signin","signin","setSignin","email","signinEmail","password","signinPassword","signInWithEmailAndPassword","mainUserSetter","friendsListRefGrape","friendsListRefOrange","friendsListRefLime","addFriendsListToFirestore","Signup","signup","setSignup","createUserWithEmailAndPassword","set","setFriendsList","Landing","App","handleSignIn","input","setState","handleCurrentUser","createGrapePath","createOrangePath","createLimePath","handleSetHome","homePage","handleFriendsList","friendsList","this","exact","React","Component","withFirestore","rootReducer","combineReducers","firestoreReducer","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","rrfProps","config","userProfile","dispatch","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7349f9a0.chunk.js","sourcesContent":["import React from \"react\";\nimport { useFirestore } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n\nfunction NewTicketForm(props) {\n  const firestore = useFirestore();\n\n  async function addChatToFirestore(event) {\n    event.preventDefault();\n    const user = firebase.auth().currentUser;\n\n    await firestore.collection(props.main_id).add(\n      {\n        name: user.displayName,\n        content: event.target.content.value,\n        user_id: user.uid,\n        createdAt: firestore.FieldValue.serverTimestamp(),\n      }\n    );\n    event.target.content.value = \"\";\n  }\n\n  return (\n    <React.Fragment>\n      <form onSubmit={addChatToFirestore}>\n        <div><textarea\n          rows=\"12\" cols=\"50\"\n          name='content'\n          placeholder='Type Chat Here...' />\n        </div>\n        <div>\n          <button type='submit'>Send</button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nNewTicketForm.propTypes = {\n  onNewTicketCreation: PropTypes.func\n};\n\nexport default NewTicketForm;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Chat(props) {\n\n  return (\n    <React.Fragment>\n      <h3>{props.name} = {props.content}</h3>\n      <hr />\n    </React.Fragment>\n  );\n}\n\nChat.propTypes = {\n  name: PropTypes.string,\n  content: PropTypes.string.isRequired,\n  user_id: PropTypes.string,\n  id: PropTypes.string\n};\n\nexport default Chat;","import React from 'react';\nimport Chat from './Chat';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport 'firebase/firestore';\n\nfunction ChatList(props) {\n\n  useFirestoreConnect([\n    { collection: props.pathname, orderBy: ['createdAt', 'desc'] }\n  ]);\n\n  let path = props.pathname;\n  const chats = useSelector(state => state.firestore.ordered[path]);\n\n  if (isLoaded(chats)) {\n    return (\n      <React.Fragment>\n        <hr />\n        {chats.map((chat) => {\n          return <Chat\n            name={chat.name}\n            content={chat.content}\n            user_id={chat.user_id}\n            id={chat.id}\n            key={chat.id} />\n        })}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <h3>Loading...</h3>\n      </React.Fragment>\n    )\n  }\n}\n\n\nChatList.propTypes = {\n  pathname: PropTypes.string\n}\n\nexport default ChatList;","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { useFirestore } from 'react-redux-firebase';\n\nfunction FriendList(props) {\n  const firestore = useFirestore();\n  const [people, setPeople] = useState([])\n\n  useEffect(() => {\n    function send() {\n      const docRef = firestore.collection(props.pathname).doc(\"friendsList\");\n      docRef.onSnapshot((doc) => {\n        if (doc.exists) {\n          setPeople(doc.data().names);\n        } else {\n          console.log(\"No such document!\");\n        }\n      })\n    }\n\n    send();\n  }, [firestore, props])\n\n\n  return (\n    <React.Fragment>\n      <div className=\"friendsList\">\n        <h3>Friends In This Chat:</h3>\n        {people.map((friend, index) =>\n          <div key={index}>{friend}</div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFriendList.propTypes = {\n  pathname: PropTypes.string\n}\n\nexport default FriendList\n\n","import React from 'react';\nimport firebase from \"firebase/app\";\nimport { useFirestore } from 'react-redux-firebase';\nimport PropTypes from \"prop-types\";\n\nfunction Logout(props) {\n  const firestore = useFirestore();\n\n  function friendsListSignOut() {\n\n    const user = firebase.auth().currentUser;\n\n    var docRef = firestore.collection(props.pathname).doc(\"friendsList\")\n    docRef.get().then(async (doc) => {\n      if (doc.exists) {\n        const newFriendsList = doc.data().names.filter(\n          (friend) =>\n            friend !== user.displayName\n        )\n        await docRef.update({\n          names: newFriendsList\n        });\n\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch((error) => {\n      console.log(\"Error getting document:\", error);\n    });\n  }\n\n  function signOut() {\n    firebase.auth().signOut().then(function () {\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  }\n\n  function doSignOut() {\n    if (firebase.auth().currentUser) {\n      friendsListSignOut();\n      signOut();\n      props.setCurrentUser(null)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <button onClick={doSignOut}>Sign out</button>\n      </div>\n    </React.Fragment>\n  );\n\n}\n\nLogout.propTypes = {\n  pathname: PropTypes.string,\n  setCurrentUser: PropTypes.func\n}\nexport default Logout\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ErrorPage(props) {\n  return (\n    <div>\n      {props.error}\n    </div>\n  )\n}\n\nErrorPage.propTypes = {\n  error: PropTypes.string\n}\n\nexport default ErrorPage\n\n","import React, { useState } from 'react'\nimport firebase from \"firebase/app\";\nimport { useFirestore } from 'react-redux-firebase';\nimport ErrorPage from './ErrorPage';\n\nexport default function AnnonSignIn(props) {\n  const firestore = useFirestore();\n  const [hasError, setError] = useState(false);\n  let error = \"\";\n\n  function friendPart(name) {\n    var friendsListRef = firestore.collection(props.main_id).doc(\"friendsList\");\n    friendsListRef.update({\n      names: firebase.firestore.FieldValue.arrayUnion(name)\n    });\n  }\n\n  function annonSignIn(event) {\n    event.preventDefault();\n    const displayName = event.target.displayName.value;\n\n    firebase.auth().signInAnonymously()\n      .then((result) => {\n        props.setCurrentUser(result.user.uid)\n        return result.user.updateProfile({\n          displayName: displayName\n        })\n      })\n      .catch((error) => {\n        var errorMessage = error.message;\n        setError(errorMessage);\n      });\n\n    friendPart(displayName);\n  }\n\n  if (hasError) {\n    error = <ErrorPage error={hasError}></ErrorPage>\n  }\n  return (\n    <React.Fragment>\n      <h1>Type You're Name and Go!</h1>\n      <form onSubmit={annonSignIn}>\n        <input\n          type='text'\n          name='displayName'\n          placeholder='name' />\n        <button type='submit'>Enter</button>\n      </form>\n      {error}\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react';\n\nfunction LinkCopy(props) {\n  // const [copySuccess, setCopySuccess] = useState('');\n\n  const copyToClipBoard = async copyMe => {\n    try {\n      await navigator.clipboard.writeText(copyMe);\n      console.log('Copied!');\n    } catch (err) {\n      console.log('Failed to copy!');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bottom_left\">\n        {\"https://jessecallahan.github.io\" + props.main_id}\n        <button onClick={() => copyToClipBoard(\"https://jessecallahan.github.io\" + props.main_id)}>\n          Click here to copy\n        </button>\n      </div>\n    </React.Fragment>\n  )\n\n}\nexport default LinkCopy;","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { useFirestore } from 'react-redux-firebase';\n\nfunction RoomTitle(props) {\n  const firestore = useFirestore();\n  const [people, setPeople] = useState(\"\")\n\n  useEffect(() => {\n    function send() {\n      const docRef = firestore.collection(props.pathname).doc(\"friendsList\");\n      docRef.get().then((doc) => {\n        if (doc.exists) {\n          setPeople(doc.data().chatRoomName);\n        } else {\n          console.log(\"No such document!\");\n        }\n      }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n    }\n\n    send();\n  }, [firestore, props])\n\n  return (\n    <React.Fragment>\n      <div>You're invited to {people}'s Chat Room</div>\n    </React.Fragment>\n  );\n\n}\n\nRoomTitle.propTypes = {\n  pathname: PropTypes.string\n}\n\nexport default RoomTitle\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport 'firebase/database';\nimport firebase from \"firebase/app\";\nimport { useFirestore } from 'react-redux-firebase';\n\nfunction ChatClear(props) {\n  const firestore = useFirestore();\n\n  function deleteCollection(path) {\n\n    firestore.collection(path).get().then(querySnapshot => {\n      querySnapshot.docs.forEach(snapshot => {\n        if (snapshot.id !== \"friendsList\") {\n          snapshot.ref.delete();\n        }\n      })\n    })\n\n    deleteFriendsList()\n  }\n\n  function deleteFriendsList() {\n    let friendsListRef = firestore.collection(props.pathname).doc(\"friendsList\");\n\n    friendsListRef.update({\n      names: [firebase.auth().currentUser.displayName]\n    });\n  }\n\n  return (\n    <div>\n      <button\n        className=\"delete button\"\n        onClick={() => {\n          const confirmBox = window.confirm(\n            \"Are you sure you want to delete the contents in this Chat Room?\"\n          )\n          if (confirmBox === true) {\n            deleteCollection(props.pathname)\n          }\n        }}>\n        Click to Clear\n      </button>\n    </div>\n  )\n}\n\nChatClear.propTypes = {\n  pathname: PropTypes.string\n}\n\nexport default ChatClear\n\n","import ChatForm from './ChatForm'\nimport ChatList from './ChatList'\nimport FriendList from './FriendList'\nimport Logout from './Logout'\nimport React from 'react'\nimport AnnonSignIn from './AnnonSignIn';\nimport 'firebase/database';\nimport firebase from \"firebase/app\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport LinkCopy from './LinkCopy'\nimport RoomTitle from './RoomTitle'\nimport ChatClear from './ChatClear'\n\nfunction ChatControl(props) {\n  let data = useLocation();\n  console.log(data)\n\n  let topLeftCurrentState = null;\n  let linkRender = null;\n  let friendShow = null;\n  let chatListShow = null;\n\n  const user = firebase.auth().currentUser;\n\n  if (user && props.currentUser) {\n    topLeftCurrentState = <ChatForm main_id={data.pathname} />\n    linkRender = <React.Fragment><div className=\"wrapper\">\n      <div className=\"bottom_right\"><Logout setCurrentUser={props.setCurrentUser} pathname={data.pathname} /></div>\n    </div></React.Fragment>\n    friendShow = <FriendList pathname={data.pathname} />\n    chatListShow = <ChatList pathname={data.pathname} />\n    if (user.uid === props.mainUser) {\n      linkRender = <React.Fragment>\n        <LinkCopy main_id={data.pathname} />\n        <div className=\"wrapper\">\n          <div className=\"bottom_right\"><Logout setCurrentUser={props.setCurrentUser} pathname={data.pathname} />\n            <ChatClear pathname={data.pathname} /></div>\n        </div>\n      </React.Fragment>\n    }\n  }\n  else {\n\n    topLeftCurrentState = <React.Fragment>\n      <div className=\"center\"><RoomTitle pathname={data.pathname}></RoomTitle>\n        <AnnonSignIn setCurrentUser={props.setCurrentUser} main_id={data.pathname} /></div>\n    </React.Fragment>\n  }\n\n  return (\n    <div className=\"parent\">\n      <div className=\"div1\">\n        {topLeftCurrentState}\n        {friendShow}\n      </div>\n      <div className=\"div2\">\n        {chatListShow}\n      </div>\n      {/* <div className=\"div3\"> */}\n\n      {/* </div> */}\n      {linkRender}\n    </div>\n  )\n}\n\nChatControl.propTypes = {\n  setCurrentUser: PropTypes.func,\n  mainUser: PropTypes.string,\n  currentUser: PropTypes.string\n}\nexport default ChatControl;\n","export default __webpack_public_path__ + \"static/media/title.3aa26e81.jpg\";","export default __webpack_public_path__ + \"static/media/grape.e887e9c9.jpg\";","export default __webpack_public_path__ + \"static/media/orange.43ddd268.jpg\";","export default __webpack_public_path__ + \"static/media/lime.fe350886.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase/app\";\nimport title from \"../assets/title.jpg\"\nimport grape from \"../assets/grape.jpg\"\nimport orange from \"../assets/orange.jpg\"\nimport lime from \"../assets/lime.jpg\"\nimport \"firebase/auth\";\n\nfunction Header(props) {\n  let grapePath = props.known_pathGrape();\n  let orangePath = props.known_pathOrange();\n  let limePath = props.known_pathLime();\n  let user = firebase.auth().currentUser;\n\n  if (props.home) {\n    return (\n      <React.Fragment> <div className=\"header\">\n        <div className=\"row\">\n          <div className=\"column\"></div></div></div><br></br><br></br>\n      </React.Fragment>);\n  } else {\n\n    if (firebase.auth().currentUser && props.currentUser) {\n      if (props.mainUser === user.uid) {\n        return (\n          <React.Fragment>\n            <div className=\"header\">\n              <div className=\"row\">\n                <div className=\"column\">\n                  <Link to=\"/quick_chat\">\n                    <img src={title} className=\"title_photo\" alt='title'></img>\n                  </Link>\n                </div>\n                <div className=\"column\" >\n                  <Link to={{\n                    pathname: grapePath\n                  }}\n                  >\n                    <img src={grape} className=\"photo\" alt='title'></img>\n                  </Link>\n                </div>\n                <div className=\"column\" >\n                  <Link to={{\n                    pathname: orangePath\n                  }}>\n                    <img src={orange} className=\"photo\" alt='title'></img>\n                  </Link>\n                </div>\n                <div className=\"column\" >\n                  <Link to={{\n                    pathname: limePath\n                  }}>\n                    <img src={lime} className=\"photo\" alt='title'></img>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </React.Fragment >\n        )\n\n      } else {\n\n        return (\n          <React.Fragment>\n            <div className=\"parent1\">\n              <div className=\"row\">\n                <div className=\"column\">\n                  <Link to=\"/quick_chat\">\n                    <img src={title} onClick={() => props.setHome(true)} className=\"title_photo\" alt='title'></img>\n                  </Link>\n                </div>\n\n              </div>\n            </div>\n          </React.Fragment >\n        );\n      }\n    } else {\n\n      return (\n        <React.Fragment>\n          <div className=\"parent1\">\n            <div className=\"row\">\n              <div className=\"column\">\n                <Link to=\"/quick_chat\">\n                  <img src={title} onClick={() => props.setHome(true)} className=\"title_photo\" alt='title'></img>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </React.Fragment >\n      );\n    }\n  }\n}\n\nHeader.propTypes = {\n  known_pathGrape: PropTypes.func,\n  known_pathOrange: PropTypes.func,\n  known_pathLime: PropTypes.func,\n  mainUser: PropTypes.string,\n  home: PropTypes.bool,\n  setHome: PropTypes.func,\n  currentUser: PropTypes.string\n};\n\nexport default Header;\n\n\n\n","import React, { useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useFirestore } from 'react-redux-firebase';\nimport Logout from './Logout';\nimport ErrorPage from './ErrorPage';\n\nfunction Signin(props) {\n  const firestore = useFirestore();\n  const [signin, setSignin] = useState(false);\n  const [hasError, setError] = useState(false);\n  let error = \"\";\n\n  function addFriendsListToFirestore(name) {\n    let friendsListRefGrape = firestore.collection(props.known_pathGrape()).doc(\"friendsList\");\n    let friendsListRefOrange = firestore.collection(props.known_pathOrange()).doc(\"friendsList\");\n    let friendsListRefLime = firestore.collection(props.known_pathLime()).doc(\"friendsList\");\n\n    friendsListRefGrape.update({\n      chatRoomName: name,\n      names: firebase.firestore.FieldValue.arrayUnion(name)\n    });\n    friendsListRefOrange.update({\n      chatRoomName: name,\n      names: firebase.firestore.FieldValue.arrayUnion(name)\n    });\n    friendsListRefLime.update({\n      chatRoomName: name,\n      names: firebase.firestore.FieldValue.arrayUnion(name)\n    });\n  }\n\n  function doSignIn(event) {\n    event.preventDefault();\n\n    const email = event.target.signinEmail.value;\n    const password = event.target.signinPassword.value;\n\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      props.mainUserSetter(firebase.auth().currentUser.uid)\n      props.setCurrentUser(firebase.auth().currentUser.uid)\n      addFriendsListToFirestore(firebase.auth().currentUser.displayName)\n      setSignin(true)\n    }).catch(function (error) {\n      setError(error.message);\n    });\n\n  }\n\n  if (hasError) {\n    error = <ErrorPage error={hasError}></ErrorPage>\n  }\n  if (signin === false) {\n    return (\n      <React.Fragment>\n        <div className=\"center\">\n          <h1>Sign In</h1>\n          <form onSubmit={doSignIn}>\n            <input\n              type='text'\n              name='signinEmail'\n              placeholder='email' />\n            <input\n              type='password'\n              name='signinPassword'\n              placeholder='Password' />\n            <button type='submit'>Sign in</button>\n          </form>\n          {error}\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <Redirect\n        to={{\n          pathname: props.known_pathGrape(),\n        }}\n      />\n    );\n  }\n}\n\nSignin.propTypes = {\n  mainUserSetter: PropTypes.func,\n  known_path: PropTypes.func,\n  mainUser: PropTypes.string,\n  setCurrentUser: PropTypes.func\n};\n\nexport default Signin\n\n","import React, { useState } from 'react';\nimport firebase from \"firebase/app\";\nimport 'firebase/database';\nimport { Redirect } from \"react-router-dom\";\nimport { useFirestore } from 'react-redux-firebase';\nimport ErrorPage from './ErrorPage';\n\nfunction Signup() {\n  const firestore = useFirestore();\n  const [signup, setSignup] = useState(false);\n  const [hasError, setError] = useState(false);\n  let error = \"\";\n\n  function setFriendsList(id) {\n    const data = {\n      chatRoomName: \"\",\n      names: []\n    }\n    firestore.collection(\"/quick_chat/chatrooms/\" + id + \"_grapeRoom\").doc(\"friendsList\").set(data);\n    firestore.collection(\"/quick_chat/chatrooms/\" + id + \"_orangeRoom\").doc(\"friendsList\").set(data);\n    firestore.collection(\"/quick_chat/chatrooms/\" + id + \"_limeRoom\").doc(\"friendsList\").set(data);\n  }\n\n  function doSignUp(event) {\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const displayName = event.target.displayName.value;\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n      setFriendsList(result.user.uid);\n      setSignup(true);\n      return result.user.updateProfile({\n        displayName: displayName\n      })\n    }).catch(function (error) {\n      console.log(error.message)\n      var errorMessage = error.message;\n      setError(errorMessage);\n    });\n  }\n  if (hasError) {\n    error = <ErrorPage error={hasError}></ErrorPage>\n  }\n  if (signup === false) {\n\n    return (\n      <React.Fragment>\n        <div className=\"center\">\n          <h1>Sign up</h1>\n          <form onSubmit={doSignUp}>\n            <input\n              type='displayName'\n              name='displayName'\n              placeholder='displayName' />\n            <input\n              type='text'\n              name='email'\n              placeholder='email' />\n            <input\n              type='password'\n              name='password'\n              placeholder='Password' />\n            <button type='submit'>Sign up</button>\n          </form>\n          {error}\n        </div>\n      </React.Fragment>\n    );\n\n\n  } else {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/signin\",\n        }}\n      />\n    );\n  }\n\n}\n\n\nexport default Signup;\n\n","import React from 'react'\nimport title from \"../assets/title.jpg\"\nimport { Link } from \"react-router-dom\";\n\nexport default function Landing(props) {\n  return (\n    <React.Fragment>\n      <div className=\"center\">\n        <h1>\n          Welcome to quick chat\n        </h1>\n        <img src={title} alt='title'></img>\n        <h2>\n          an application where you can chat quickly\n        </h2>\n        <h4>\n          Already have an account?&nbsp;\n          <Link onClick={() => props.setHome(false)} to=\"/signin\">Log In Here</Link>\n          &nbsp;--\n          Need an account?&nbsp;\n          <Link onClick={() => props.setHome(false)} to=\"/signup\">Sign Up Here</Link>\n        </h4>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport ChatControl from './ChatControl';\nimport Header from './Header'\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\"\nimport Landing from \"./Landing\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './../App.css';\nimport 'firebase/database';\nimport \"firebase/auth\";\nimport { withFirestore } from 'react-redux-firebase';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainUser: null,\n      currentUser: null,\n      homePage: null\n    };\n  }\n\n  handleSignIn = (input) => {\n    this.setState({\n      mainUser: input\n    })\n  }\n\n  handleCurrentUser = (input) => {\n    this.setState({\n      currentUser: input\n    })\n  }\n\n  createGrapePath = () => {\n    var newPath = \"quick_chat/chatrooms/\" + this.state.mainUser + \"_grapeRoom\"\n    return newPath\n  }\n\n  createOrangePath = () => {\n    var newPath = \"quick_chat/chatrooms/\" + this.state.mainUser + \"_orangeRoom\"\n    return newPath\n  }\n\n  createLimePath = () => {\n    var newPath = \"quick_chat/chatrooms/\" + this.state.mainUser + \"_limeRoom\"\n    return newPath\n  }\n\n  handleSetHome = (input) => {\n    this.setState({\n      homePage: input\n    })\n  }\n\n  handleFriendsList = (input) => {\n    this.setState({\n      friendsList: input\n    })\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <Header\n          home={this.state.homePage}\n          setHome={this.handleSetHome}\n          known_pathGrape={this.createGrapePath}\n          known_pathOrange={this.createOrangePath}\n          known_pathLime={this.createLimePath}\n          mainUser={this.state.mainUser}\n          currentUser={this.state.currentUser}\n        />\n        <Switch>\n          <Route exact path=\"/quick_chat\">\n            <Landing setHome={this.handleSetHome} />\n          </Route>\n          <Route path=\"/signin\">\n            <Signin mainUserSetter={this.handleSignIn}\n              known_pathGrape={this.createGrapePath}\n              known_pathOrange={this.createOrangePath}\n              known_pathLime={this.createLimePath}\n              mainUser={this.state.mainUser}\n              setCurrentUser={this.handleCurrentUser} />\n          </Route>\n          <Route path=\"/signup\" >\n            <Signup />\n          </Route>\n          <Route path={this.createGrapePath} >\n            <ChatControl mainUser={this.state.mainUser}\n              currentUser={this.state.currentUser}\n              setCurrentUser={this.handleCurrentUser} />\n          </Route>\n          <Route path={this.createOrangePath}>\n            <ChatControl mainUser={this.state.mainUser}\n              currentUser={this.state.currentUser}\n              setCurrentUser={this.handleCurrentUser} />\n          </Route>\n          <Route path={this.createLimePath}>\n            <ChatControl mainUser={this.state.mainUser}\n              currentUser={this.state.currentUser}\n              setCurrentUser={this.handleCurrentUser} />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default withFirestore(App);","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nconst rootReducer = combineReducers({\n  firestore: firestoreReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport firebase from \"./firebase\";\nimport 'firebase/auth';\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nconst rrfProps = {\n  firebase,\n  config: {\n    userProfile: \"users\"\n  },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}